version: '3.8'

services:

  traefik:
    image: traefik:v3.4.0
    container_name: traefik
    restart: always
    networks:
      - default
    ports:
      - 8080:80
      - 8443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/acme.json:/acme.json

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: always
    networks:
      - default
    volumes:
      - /data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=hackme
      - POSTGRES_MULTIPLE_DATABASES=synapse
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  synapse:
    image: matrixdotorg/synapse:v1.130.0
    container_name: synapse
    restart: always
    networks:
      - default
    volumes:
      - ./synapse:/data
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.synapse.rule=Host(`matrix.teashaped.dev`)"
      # - "traefik.http.routers.synapse.entrypoints=websecure"
      # - "traefik.http.routers.synapse.tls=true"
      # - "traefik.http.routers.synapse.tls.certresolver=letsencrypt"
      - "traefik.http.services.synapse.loadbalancer.server.port=8008"

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge
